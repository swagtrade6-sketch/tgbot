from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor

API_TOKEN = "8224907422:AAHM8jkdhTHFXrTJDCTcomep8jvZj6hjwGU"
OWNER_ID = 5992958475  # —Ç–≤–æ–π Telegram ID

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –•—Ä–∞–Ω–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å
requested_users = set()

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message_handler(commands=["start"])
async def start_handler(message: types.Message):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(
        types.InlineKeyboardButton(
            text="üìû –°–≤—è–∑–∞—Ç—å—Å—è",
            callback_data="request_contact"
        )
    )
    await message.answer(
        "üëã –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
        reply_markup=keyboard
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
@dp.message_handler(content_types=types.ContentTypes.TEXT)
async def block_text(message: types.Message):
    if message.from_user.id in requested_users:
        await message.reply("‚è≥ –û–∂–∏–¥–∞–π—Ç–µ, –≤—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–≤—è–∑—å.")
    else:
        await message.reply("‚ùå –ü–∏—Å–∞—Ç—å —Å—é–¥–∞ –Ω–µ –Ω—É–∂–Ω–æ.\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤—ã—à–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏
@dp.callback_query_handler(lambda c: c.data == "request_contact")
async def process_request(callback_query: types.CallbackQuery):
    user = callback_query.from_user
    if user.id not in requested_users:
        requested_users.add(user.id)

        # —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü—É
        await bot.send_message(
            OWNER_ID,
            f"üì© –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–≤—è–∑—å!\n"
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{user.username or user.full_name}\n"
            f"ID: {user.id}"
        )
        await callback_query.answer("‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –û–∂–∏–¥–∞–π—Ç–µ.")
    else:
        await callback_query.answer("‚è≥ –í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
